// Mocks generated by Mockito 5.4.5 from annotations
// in match_day/test/Unit/prenotazione_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:match_day/DAO/prenotazioniDao.dart' as _i3;
import 'package:match_day/DAO/slotDao.dart' as _i2;
import 'package:match_day/Models/prenotazione.dart' as _i4;
import 'package:match_day/Models/slot.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSlotDao_0 extends _i1.SmartFake implements _i2.SlotDao {
  _FakeSlotDao_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PrenotazioniDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrenotazioniDao extends _i1.Mock implements _i3.PrenotazioniDao {
  MockPrenotazioniDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SlotDao get slotDao =>
      (super.noSuchMethod(
            Invocation.getter(#slotDao),
            returnValue: _FakeSlotDao_0(this, Invocation.getter(#slotDao)),
          )
          as _i2.SlotDao);

  @override
  set slotDao(_i2.SlotDao? _slotDao) => super.noSuchMethod(
    Invocation.setter(#slotDao, _slotDao),
    returnValueForMissingStub: null,
  );

  @override
  List<_i4.Prenotazione> get prenotazioni =>
      (super.noSuchMethod(
            Invocation.getter(#prenotazioni),
            returnValue: <_i4.Prenotazione>[],
          )
          as List<_i4.Prenotazione>);

  @override
  _i5.Future<void> fetchPrenotazioni() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPrenotazioni, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> modificaPrenotazioneinAnnullata(String? idPrenotazione) =>
      (super.noSuchMethod(
            Invocation.method(#modificaPrenotazioneinAnnullata, [
              idPrenotazione,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> modificaPrenotazioneConSlot(
    String? id,
    String? dataPrenotazioneString,
    _i6.Slot? selectedSlot,
    String? idCampoPrecedente,
    String? slotPrecedenteId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#modificaPrenotazioneConSlot, [
              id,
              dataPrenotazioneString,
              selectedSlot,
              idCampoPrecedente,
              slotPrecedenteId,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<List<_i4.Prenotazione>> fetchPrenotazioniStream() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPrenotazioniStream, []),
            returnValue: _i5.Stream<List<_i4.Prenotazione>>.empty(),
          )
          as _i5.Stream<List<_i4.Prenotazione>>);

  @override
  _i5.Future<void> rifiutaPrenotazione(
    String? prenotazioneId,
    String? campoId,
    String? slotId,
    String? dataPrenotazione,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#rifiutaPrenotazione, [
              prenotazioneId,
              campoId,
              slotId,
              dataPrenotazione,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<List<_i4.Prenotazione>> fetchPrenotazioniStreamByUser(
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchPrenotazioniStreamByUser, [userId]),
            returnValue: _i5.Stream<List<_i4.Prenotazione>>.empty(),
          )
          as _i5.Stream<List<_i4.Prenotazione>>);

  @override
  _i5.Future<void> ripristinaSlotDisponibile(
    String? campoId,
    String? data,
    _i6.Slot? slot,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#ripristinaSlotDisponibile, [
              campoId,
              data,
              slot,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<List<_i4.Prenotazione>> fetchPrenotazioniConfermate() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPrenotazioniConfermate, []),
            returnValue: _i5.Stream<List<_i4.Prenotazione>>.empty(),
          )
          as _i5.Stream<List<_i4.Prenotazione>>);

  @override
  _i5.Future<void> aggiornaPrenotazione(
    String? prenotazioneId,
    _i4.Stato? nuovoStato,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#aggiornaPrenotazione, [
              prenotazioneId,
              nuovoStato,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i6.Slot?> recuperaSlot(
    String? campoId,
    String? dataPrenotazione,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#recuperaSlot, [campoId, dataPrenotazione]),
            returnValue: _i5.Future<_i6.Slot?>.value(),
          )
          as _i5.Future<_i6.Slot?>);

  @override
  _i5.Future<void> eliminaPrenotazione(String? prenotazioneId) =>
      (super.noSuchMethod(
            Invocation.method(#eliminaPrenotazione, [prenotazioneId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> accettaPrenotazione(String? prenotazioneId) =>
      (super.noSuchMethod(
            Invocation.method(#accettaPrenotazione, [prenotazioneId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> rifiutaModificaPrenotazione(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#rifiutaModificaPrenotazione, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> accettaModificaPrenotazione(
    String? id,
    String? idCampo,
    String? slotId,
    String? dataPrenotazione,
    String? orarioSlot,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#accettaModificaPrenotazione, [
              id,
              idCampo,
              slotId,
              dataPrenotazione,
              orarioSlot,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
